Name:                DSH
Version:             0.9.0
Synopsis:            Database Supported Haskell
Description:
  This is a Haskell library for database-supported program execution. Using
  this library a relational database management system (RDBMS) can be used as
  a coprocessor for the Haskell programming language, especially for those
  program fragments that carry out data-intensive and data-parallel
  computations.
  .
  Database executable program fragments can be written using the monad
  comprehension notation [2] and list processing combinators from the Haskell
  list prelude. Note that rather than embedding a relational language into
  Haskell, we turn idiomatic Haskell programs into SQL queries.
  .
  DSH faithfully represents list order and nesting, and compiles the list
  processing combinators into relational queries. The implementation avoids
  unnecessary data transfer and context switching between the database
  coprocessor and the Haskell runtime by ensuring that the number of generated
  relational queries is only determined by the program fragment's type and not
  by the database size.
  .
  DSH can be used to allow existing Haskell programs to operate on large scale
  data (e.g., larger than the available heap) or query existing database
  resident data with Haskell.
  .
  Note that this package is flagged experimental and therefore is not suited
  for production use. This is a proof of concept implementation only. To learn
  more about DSH, our paper entitled as "Haskell Boards the Ferry: Database-
  Supported Program Execution for Haskell" [1] is a recommended reading. The
  package includes a couple of examples that demonstrate how to use DSH.
  .
  The latest release implements new features described in our work-in-progress
  paper entitled as "Algebraic Data Types for Language-Integrated
  Queries" [3].
  .
  1. <http://db.inf.uni-tuebingen.de/files/giorgidze/ifl2010.pdf>
  .
  2. <http://db.inf.uni-tuebingen.de/files/giorgidze/haskell2011.pdf>
  .
  3. <http://db.inf.uni-tuebingen.de/files/giorgidze/adtq.pdf>

License:             BSD3
License-file:        LICENSE
Author:              George Giorgidze, Alexander Ulrich, Tom Schreiber, Nils Schweinsberg and Jeroen Weijers
Maintainer:          alexander.ulrich@uni-tuebingen.de
Stability:           Experimental
Category:            Database
Build-type:          Simple

Extra-source-files:  examples/Example01.hs
                     examples/Example02.hs
                     examples/Example03.hs
                     examples/Makefile
                     tests/Main.hs
		     tests/ComprehensionTests.hs
		     tests/DSHComprehensions.hs
		     tests/CombinatorTests.hs
                     tests/Makefile

Cabal-version:       >= 1.8

Flag debugcomp
  Description: Print debugging information for comprehension rewrites
  Default:     False

Flag debuggraph
  Description: Print debugging information for graph rewrites (VL, TA, X100)
  Default:     False

Library
  Extensions:        CPP
  Build-depends:     base               >= 4.5 && < 5,
                     containers         >= 0.4.0.0,
                     mtl                >= 2.1,
                     bytestring         >= 0.9.1.10,
                     text               >= 0.11.0.6,
                     HDBC               >= 2.3.1.0,
                     template-haskell   >= 2.8.0.0,
                     X100Client         >= 0.0.2,
                     pretty             >= 1.0.1.1,
                     aeson              >= 0.6.0.0,
                     X100Client         >= 0.0.2,
                     TableAlgebra       >= 2.0.0,
                     kure               >= 2.16.1,
                     either             >= 4.0,
                     semigroups,
                     ansi-wl-pprint,
                     set-monad,
                     dlist
                     
  Hs-source-dirs:    src

  if flag(debugcomp)
    CPP-Options:     -DDEBUGCOMP
  
  if flag(debuggraph)
    CPP-Options:     -DDEBUGGRAPH

  GHC-Options:       -Wall -auto-all -fno-warn-orphans

  Exposed-modules:   Database.DSH
                     Database.DSH.Compiler

  Other-modules:     Database.DSH.Frontend.Internals
                     Database.DSH.Frontend.Schema
                     Database.DSH.Frontend.Externals
                     Database.DSH.Frontend.TH
                     Database.DSH.Translate.Frontend2CL
                     Database.DSH.Execute.Sql
                     Database.DSH.Execute.X100
                     Database.DSH.Common.Pretty
                     Database.DSH.Common.Type
                     Database.DSH.Common.Lang
                     Database.DSH.Common.QueryPlan
                     Database.DSH.Common.DBCode
                     Database.DSH.Common.TransM
                     Database.DSH.Export
                     Database.DSH.CL.Lang
                     Database.DSH.CL.Monad
                     Database.DSH.CL.Kure
                     Database.DSH.CL.Primitives
                     Database.DSH.CL.Opt
                     Database.DSH.CL.Opt.Aux
                     Database.DSH.CL.Opt.Support
                     Database.DSH.CL.Opt.PredPushdown
                     Database.DSH.CL.Opt.Normalize
                     Database.DSH.CL.Opt.CompNormalization
                     Database.DSH.CL.Opt.PartialEval
                     Database.DSH.CL.Opt.FlatJoin
                     Database.DSH.CL.Opt.NestJoin
                     Database.DSH.FKL.Data.FKL
                     Database.DSH.FKL.FKLPrimitives
                     Database.DSH.FKL.Render.Render
                     Database.DSH.NKL.Lang
                     Database.DSH.Translate.Algebra2Query
                     Database.DSH.Translate.CL2NKL
                     Database.DSH.Translate.FKL2VL
                     Database.DSH.Translate.NKL2FKL
                     Database.DSH.Translate.VL2Algebra

                     Database.DSH.VL.Lang
                     Database.DSH.VL.Render.Dot
                     Database.DSH.VL.Render.JSON
                     Database.DSH.VL.Vector
                     Database.DSH.VL.Shape
                     Database.DSH.VL.MetaPrimitives
                     Database.DSH.VL.TAVectorPrimitives
                     Database.DSH.VL.VectorOperations
                     Database.DSH.VL.VectorPrimitives
                     Database.DSH.VL.VectorPrimitives
                     Database.DSH.VL.VLPrimitives
                     Database.DSH.VL.X100VectorPrimitives
                     Database.DSH.Impossible

                     Database.DSH.Optimizer.Common.Aux
                     Database.DSH.Optimizer.Common.Rewrite

--                     Database.DSH.Optimizer.X100.Rewrite.Common
--                     Database.DSH.Optimizer.X100.Rewrite.ConstOpt
--                     Database.DSH.Optimizer.X100.Rewrite.JoinPushdown
--                     Database.DSH.Optimizer.X100.Rewrite.Key
--                     Database.DSH.Optimizer.X100.Rewrite.ProjectionMerge
--                     Database.DSH.Optimizer.X100.Rewrite.PruneColumns
--                     Database.DSH.Optimizer.X100.Rewrite.PruneEmpty
--                     Database.DSH.Optimizer.X100.Rewrite.PruneJoins
--   
                     Database.DSH.Optimizer.VL.Properties.BottomUp
                     Database.DSH.Optimizer.VL.Properties.Card
                     Database.DSH.Optimizer.VL.Properties.Common
                     Database.DSH.Optimizer.VL.Properties.Const
                     Database.DSH.Optimizer.VL.Properties.Empty
                     Database.DSH.Optimizer.VL.Properties.NonEmpty
                     Database.DSH.Optimizer.VL.Properties.ReqColumns
                     Database.DSH.Optimizer.VL.Properties.TopDown
                     Database.DSH.Optimizer.VL.Properties.Types
                     Database.DSH.Optimizer.VL.Properties.VectorType

                     Database.DSH.Optimizer.X100.OptimizeX100
                     Database.DSH.Optimizer.X100.Rewrite.Common
                     Database.DSH.Optimizer.X100.Rewrite.Project

                     Database.DSH.Optimizer.TA.Properties.BottomUp
                     Database.DSH.Optimizer.TA.Properties.TopDown
                     Database.DSH.Optimizer.TA.Properties.Types
                     Database.DSH.Optimizer.TA.Properties.Cols
                     Database.DSH.Optimizer.TA.Properties.ICols
                     Database.DSH.Optimizer.TA.Properties.Use
                     Database.DSH.Optimizer.TA.Properties.Aux
                     Database.DSH.Optimizer.TA.Properties.Empty
                     Database.DSH.Optimizer.TA.Properties.Card1
                     Database.DSH.Optimizer.TA.Properties.Keys
                     Database.DSH.Optimizer.TA.Properties.Order
                     Database.DSH.Optimizer.TA.Rewrite.Basic
                     Database.DSH.Optimizer.TA.Rewrite.Common
                     Database.DSH.Optimizer.TA.OptimizeTA
		     
                     Database.DSH.Optimizer.Common.Rewrite
                     Database.DSH.Optimizer.VL.OptimizeVL
                     Database.DSH.Optimizer.VL.Rewrite.Common
                     Database.DSH.Optimizer.VL.Rewrite.Expressions
                     Database.DSH.Optimizer.VL.Rewrite.PruneEmpty
                     Database.DSH.Optimizer.VL.Rewrite.Redundant
                     Database.DSH.Optimizer.VL.Rewrite.Aggregation
                     Database.DSH.Optimizer.VL.Rewrite.Unused
-- 
-- executable vltox100
--   Main-is: Database/DSH/Tools/VLToX100.hs
--   GHC-Options:       -Wall -fno-warn-orphans -fno-warn-type-defaults -fno-warn-unused-do-bind
--   hs-source-dirs:   src
--   build-depends:    base >= 4.5,
--                     mtl >= 2.1,
--                     containers >= 0.4.0.0,
--                     template-haskell >= 2.7,
--                     TableAlgebra >= 2.0.0,
--                     aeson >= 0.6,
--                     bytestring >= 0.9.1.10,
--                     pretty >= 1.0.1.1
-- 
-- Executable x100opt
--   Hs-Source-Dirs:   src
--   Main-Is: Database/DSH/Optimizer/X100/Tools/Opt.hs
--   Build-depends:       base,
--                        TableAlgebra >= 2.0.0,
--                        containers,
--                        pretty,
--                        mtl,
--                        bytestring,
--                        aeson
--   GHC-Options: -rtsopts -auto-all -fno-warn-orphans -fprof-auto 
-- 
-- Executable vlopt
--   Hs-Source-Dirs:   src
--   Main-Is: Database/DSH/Optimizer/VL/Tools/Opt.hs
--   Build-depends:       base,
--                        TableAlgebra >= 2.0.0,
--                        containers,
--                        template-haskell,
--                        pretty,
--                        bytestring,
--                        mtl,
--                        aeson,
--                        ansi-wl-pprint
--   GHC-Options: -rtsopts -fno-warn-orphans -fprof-auto -auto-all
-- 
-- Executable vlprop
--   Hs-Source-Dirs:   src
--   Main-Is: Database/DSH/Optimizer/VL/Tools/Prop.hs
--   Build-depends:       base,
--                        TableAlgebra >= 2.0.0,
--                        containers,
--                        mtl,
--                        bytestring,
--                        pretty,
--                        aeson,
--                        ansi-wl-pprint,
--                        template-haskell
--   GHC-Options: -rtsopts -auto-all -fno-warn-orphans -fprof-auto 
--                   

executable vldot
    Main-is: Database/DSH/Tools/VLDotGen.hs
    GHC-Options:      -Wall -fno-warn-orphans
    hs-source-dirs:   src
    build-depends:    base                >= 4.2 && < 5, 
                      aeson               >= 0.6, 
                      mtl                 >= 2.0.1.0, 
                      containers          >= 0.3.0.0, 
                      template-haskell    >= 2.8.0.0, 
                      pretty              >= 1.0.1.1, 
                      bytestring          >= 0.9,
                      fgl, 
                      TableAlgebra,
                      ansi-wl-pprint,
                      semigroups
    GHC-Options: -Wall -fno-warn-orphans

executable dft
    hs-source-dirs: examples/dft
    Main-Is:        Dft.hs
    Build-depends:  base, X100Client, DSH
    GHC-Options:    -Wall -fno-warn-orphans

Test-Suite Flattening_x100
    type:       exitcode-stdio-1.0
    Hs-Source-Dirs: tests
    Main-is:       Main.hs
    Build-depends: base                       >= 4.2 && < 5,
                   containers,
                   QuickCheck                 >= 2.4,
                   DSH                        >= 0.7.8.1,
                   text                       >= 0.11,
                   X100Client                 >= 0.0.2,
                   derive                     >= 2.5,
                   test-framework-quickcheck2 >= 0.2.12.1,
                   test-framework-hunit,
                   test-framework >= 0.6,
                   HUnit
    cpp-options: -DisX100
    GHC-Options: -Wall -fno-warn-orphans
    extensions: CPP
    
Test-Suite Flattening_TA
    type:       exitcode-stdio-1.0
    Hs-Source-Dirs : tests
    Main-is:       Main.hs
    Build-depends: base                       >= 4.2 && < 5,
                   QuickCheck                 >= 2.4,
                   DSH                        >= 0.7.8.1,
                   containers,
                   text                       >= 0.11,
                   HDBC-postgresql            >= 2.3,
                   HDBC                       >= 2.3,
                   derive                     >= 2.5,
                   test-framework-quickcheck2 >= 0.2.12.1,
                   test-framework-hunit,
                   test-framework             >= 0.6,
                   HUnit
    cpp-options: -DisDBPH
    GHC-Options: -Wall -fno-warn-orphans
    Extensions: CPP
